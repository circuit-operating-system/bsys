#!/bin/sh

# Exit on error
set -e

# Display the help message
help() {
    echo "Usage: bsys (-chtx) (--uncross)"
    echo
    echo "Options:"
    echo "    -h, --help       Shows this help message."
    echo "    -t, --test       Run the OS in QEMU."
    echo "    -c, --clean      Remove generated objects and images."
    echo "    -x, --cross      Build and install a cross-compilation toolchain."
    echo "    --uncross        Uninstall the cross-compilation toolchain."

    exit 0
}

# Clean the repo root of artifacts
clean() {
    # Check if REPO is set
    if [ -z "$REPO" ]; then
        echo "(X) REPO has no value; have you sourced \`devenv\`?"
        exit 1
    fi

    rm -rf "$REPO/bin" "$REPO/obj" "$REPO/tmp"
    exit 0
}

test() {
    if [ -z "$REPO" ]; then
        echo "(X) REPO has no value; have you sourced \`devenv\`?"
        exit 1
    fi

    qemu-system-i386 -kernel "$REPO/bin/circuitos.bin"
    exit 0
}

cross() {
    if [ -z "$REPO" ]; then
        echo "(X) REPO has no value; have you sourced \`devenv\`?"
        exit 1
    fi

    if [ ! -d "$REPO/binutils.cross" ]; then
        echo "(X) binutils.cross not found in repo clone root. (Is \$REPO set properly?)" >&2
        exit 1
    fi

    if [ ! -d "$REPO/gcc.cross" ]; then
        echo "(X) gcc.cross not found in repo clone root. (Is \$REPO set properly?)" >&2
        exit 1
    fi

    TARGET="i686-elf"
    PREFIX="${PREFIX:-/opt/cross}"

    if [ -d "$REPO/tmp" ]; then
        rm -rf "$REPO/tmp"
    fi

    mkdir -p "$REPO/tmp/binutils" "$REPO/tmp/gcc"

    cd "$REPO/tmp/binutils"
    "$REPO/binutils.cross/configure" --target="$TARGET" --prefix="$PREFIX" --with-sysroot --disable-nls --disable-werror
    make -j$(getconf _NPROCESSORS_ONLN)
    make install

    cd "$REPO/tmp/gcc"
    "$REPO/gcc.cross/configure" --target="$TARGET" --prefix="$PREFIX" --disable-nls --enable-languages=c,c++ --without-headers --disable-hosted-libstdcxx
    make all-gcc -j$(getconf _NPROCESSORS_ONLN)
    make all-target-libgcc -j$(getconf _NPROCESSORS_ONLN)
    make all-target-libstdc++-v3 -j$(getconf _NPROCESSORS_ONLN)
    make install-gcc
    make install-target-libgcc
    make install-target-libstdc++-v3

    echo "=> Set your PATH to $PREFIX/bin:\$PATH to use the cross-compilation toolchain."
}

if [ "$#" -eq 0 ]; then
    if ! command -v i686-elf-as >/dev/null 2>&1; then
        echo "(X) Cross-compiler not found in PATH." >&2
        exit 1
    fi

    if [ -z "$REPO" ]; then
        echo "(X) REPO has no value; have you sourced \`devenv\`?"
        exit 1
    fi

    echo ":: Compiling boot stub..."
    mkdir -p "$REPO/obj"
    i686-elf-as "$REPO/src/boot.asm" -o "$REPO/obj/boot.o"

    echo ":: Compiling Wireframe kernel..."
    i686-elf-gcc -c "$REPO/src/kernel.c" -o "$REPO/obj/kernel.o" -std=gnu99 -ffreestanding -O2 -Wall -Wextra

    echo ":: Linking OS..."
    mkdir -p bin
    i686-elf-gcc -T /opt/bsys/etc/linker.ld -o bin/circuitos.bin -ffreestanding -O2 -nostdlib "$REPO/obj/boot.o" "$REPO/obj/kernel.o" -lgcc
    exit 0
fi

case "$1" in
    -c | --clean)
        clean
        ;;
    -h | --help)
        help
        ;;
    -t | --test)
        test
        ;;
    -x | --cross)
        cross
        ;;
    *)
        help
        ;;
esac